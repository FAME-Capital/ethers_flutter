name: Publish package to pub.dev
on:
  push:
    branches:   
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Get Flutter cache directory path
        id: pub-cache-dir-path
        run: |
          echo "::set-output name=dir::$FLUTTER_HOME/.pub-cache"

      - name: Activate Flutter Pub Packages Cache
        uses: actions/cache@v1
        id: pub-cache
        with:
          path: ${{ steps.pub-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - run: flutter pub get

      - run: flutter test --test-randomize-ordering-seed=$RANDOM


  deploy:
    runs-on: ubuntu-latest
    needs: test
    container:
      image:  google/dart:latest
    steps:
    - uses: actions/checkout@v1

    - name: Setup credentials
      run: | 
        mkdir -p ~/.pub-cache 
        cat <<EOF > ~/.pub-cache/credentials.json
        {
          "accessToken":"${{ secrets.OAUTH_ACCESS_TOKEN }}",
          "refreshToken":"${{ secrets.OAUTH_REFRESH_TOKEN }}",
          "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
          "scopes": [ "openid", "https://www.googleapis.com/auth/userinfo.email" ],
          "expiration": 1570721159347
        }
        EOF

    - name: Get cache directory path
      id: pub-cache-dir-path
      run: |
        echo "::set-output name=dir::$FLUTTER_HOME/.pub-cache"

    - name: Activate Pub Packages Cache
      uses: actions/cache@v1
      id: pub-cache
      with:
        path: ${{ steps.pub-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - run: pub get

    - name: Publish package
      run: pub publish -f